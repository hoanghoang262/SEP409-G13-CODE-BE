name: dockercompose1650305889615981457
services:
  authenticate:
    build:
      context: C:\Users\fpt\Desktop\HappyLearning\SEP490-G13-CODE-BE
      dockerfile: Authenticate_Service/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_started
        required: true
      sqlserverdb:
        condition: service_started
        required: true
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: http://+:80
      ConnectionStrings:DefaultConnection: server=sqlserverdb;database=Authentication;uid=sa;pwd=PassW0rd!;TrustServerCertificate=True
      EventBusSetting:HostAddress: amqp://guest:guest@rabbitmq:5672
    image: authenticated
    networks:
      default: null
    ports:
      - mode: ingress
        target: 80
        published: "6001"
        protocol: tcp
    restart: always
    volumes:
      - type: bind
        source: C:\Users\fpt\AppData\Roaming/Microsoft/UserSecrets
        target: /root/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
  course:
    build:
      context: C:\Users\fpt\Desktop\HappyLearning\SEP490-G13-CODE-BE
      dockerfile: Course.API/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_started
        required: true
      sqlserverdb:
        condition: service_started
        required: true
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: http://+:80
      ConnectionStrings:DefaultConnection: server=sqlserverdb;database=Course;uid=sa;pwd=PassW0rd!;TrustServerCertificate=True
      EventBusSetting:HostAddress: amqp://guest:guest@rabbitmq:5672
      GrpcSetting:UserUrl: http://usergrpc
    image: course
    networks:
      default: null
    ports:
      - mode: ingress
        target: 80
        published: "6002"
        protocol: tcp
    restart: always
    volumes:
      - type: bind
        source: C:\Users\fpt\AppData\Roaming/Microsoft/UserSecrets
        target: /root/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
  coursegrpc:
    build:
      context: C:\Users\fpt\Desktop\HappyLearning\SEP490-G13-CODE-BE
      dockerfile: CourseGRPC/Dockerfile
    depends_on:
      sqlserverdb:
        condition: service_started
        required: true
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: http://+:80
      ConnectionStrings:DefaultConnection: server=sqlserverdb;database=Course;uid=sa;pwd=PassW0rd!;TrustServerCertificate=True
    image: coursegrpc
    networks:
      default: null
    ports:
      - mode: ingress
        target: 80
        published: "6005"
        protocol: tcp
    volumes:
      - type: bind
        source: C:\Users\fpt\AppData\Roaming/Microsoft/UserSecrets
        target: /root/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\fpt\AppData\Roaming/ASP.NET/Https
        target: /root/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
  moderationservice.api:
    build:
      context: C:\Users\fpt\Desktop\HappyLearning\SEP490-G13-CODE-BE
      dockerfile: ModerationService.API/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_started
        required: true
      sqlserverdb:
        condition: service_started
        required: true
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: http://+:80
      ConnectionStrings:DefaultConnection: server=sqlserverdb;database=Content_Moderation;uid=sa;pwd=PassW0rd!;TrustServerCertificate=True
      EventBusSetting:HostAddress: amqp://guest:guest@rabbitmq:5672
      GrpcSetting:UserUrl: http://usergrpc
      GrpcSetting2:CourseUrl: http://coursegrpc
    image: moderationserviceapi
    networks:
      default: null
    ports:
      - mode: ingress
        target: 80
        published: "6004"
        protocol: tcp
    restart: always
    volumes:
      - type: bind
        source: C:\Users\fpt\AppData\Roaming/Microsoft/UserSecrets
        target: /root/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
  notificationservice.api:
    build:
      context: C:\Users\fpt\Desktop\HappyLearning\SEP490-G13-CODE-BE
      dockerfile: NotificationService.API/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: http://+:80
      ConnectionStrings:DefaultConnection: server=sqlserverdb;database=Notification;uid=sa;pwd=PassW0rd!;TrustServerCertificate=True
      EventBusSetting:HostAddress: amqp://guest:guest@rabbitmq:5672
    image: notificationserviceapi
    networks:
      default: null
    ports:
      - mode: ingress
        target: 80
        published: "6006"
        protocol: tcp
      - mode: ingress
        target: 80
        protocol: tcp
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3.12.11-management-alpine
    networks:
      default: null
    ports:
      - mode: ingress
        target: 5672
        published: "5672"
        protocol: tcp
      - mode: ingress
        target: 15672
        published: "15672"
        protocol: tcp
    restart: always
  redisdb:
    container_name: redisdb
    image: redis:alpine
    networks:
      default: null
    ports:
      - mode: ingress
        target: 6379
        published: "6379"
        protocol: tcp
    restart: always
  reverseproxy:
    build:
      context: C:\Users\fpt\Desktop\HappyLearning\SEP490-G13-CODE-BE
      dockerfile: ReverseProxy/Dockerfile
    depends_on:
      authenticate:
        condition: service_started
        required: true
      course:
        condition: service_started
        required: true
    environment:
      ASPNETCORE_ENVIRONMENT: Local
      ASPNETCORE_URLS: http://+:80
      GlobalConfiguration:BaseURL: http://reverseproxy
    image: reverseproxy
    networks:
      default: null
    ports:
      - mode: ingress
        target: 80
        published: "6000"
        protocol: tcp
    restart: always
    volumes:
      - type: bind
        source: C:\Users\fpt\AppData\Roaming/Microsoft/UserSecrets
        target: /root/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
  sqlserverdb:
    container_name: sqlserverdb
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: PassW0rd!
    image: mcr.microsoft.com/mssql/server:2019-latest
    networks:
      default: null
    ports:
      - mode: ingress
        target: 1433
        published: "1435"
        protocol: tcp
    restart: always
    volumes:
      - type: bind
        source: C:\Users\fpt\Desktop\HappyLearning\SEP490-G13-CODE-BE\data
        target: /var/opt/mssql/data
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\fpt\Desktop\HappyLearning\SEP490-G13-CODE-BE\log
        target: /var/opt/mssql/log
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\fpt\Desktop\HappyLearning\SEP490-G13-CODE-BE\secrets
        target: /var/opt/mssql/secrets
        bind:
          create_host_path: true
  usergrpc:
    build:
      context: C:\Users\fpt\Desktop\HappyLearning\SEP490-G13-CODE-BE
      dockerfile: GrpcService1/Dockerfile
    depends_on:
      sqlserverdb:
        condition: service_started
        required: true
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: http://+:80
      ConnectionStrings:DefaultConnection: server=sqlserverdb;database=Authentication;uid=sa;pwd=PassW0rd!;TrustServerCertificate=True
    image: usergrpc
    networks:
      default: null
    ports:
      - mode: ingress
        target: 80
        published: "6003"
        protocol: tcp
    volumes:
      - type: bind
        source: C:\Users\fpt\AppData\Roaming/Microsoft/UserSecrets
        target: /root/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\fpt\AppData\Roaming/ASP.NET/Https
        target: /root/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
networks:
  default:
    name: CMS
    driver: bridge